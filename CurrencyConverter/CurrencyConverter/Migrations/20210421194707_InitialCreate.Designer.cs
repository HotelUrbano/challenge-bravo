// <auto-generated />
using CurrencyConverter.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyConverter.Migrations
{
    [DbContext(typeof(CurrencyConverterContext))]
    [Migration("20210421194707_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyConverter.Model.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValueComparedToDollar")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "USD",
                            ValueComparedToDollar = 1.0
                        },
                        new
                        {
                            Id = 2L,
                            Name = "BRL",
                            ValueComparedToDollar = 6.0
                        },
                        new
                        {
                            Id = 3L,
                            Name = "EUR",
                            ValueComparedToDollar = 0.5
                        },
                        new
                        {
                            Id = 4L,
                            Name = "BTC",
                            ValueComparedToDollar = 100000.0
                        },
                        new
                        {
                            Id = 5L,
                            Name = "ETH",
                            ValueComparedToDollar = 20000.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
