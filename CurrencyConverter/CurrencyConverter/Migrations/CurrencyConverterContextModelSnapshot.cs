// <auto-generated />
using System;
using CurrencyConverter.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyConverter.Migrations
{
    [DbContext(typeof(CurrencyConverterContext))]
    partial class CurrencyConverterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyConverter.Model.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValueComparedToBaseCurrency")
                        .HasPrecision(22, 10)
                        .HasColumnType("decimal(22,10)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            Name = "USD",
                            UpdateDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            ValueComparedToBaseCurrency = 1.00m
                        },
                        new
                        {
                            Id = 2L,
                            CreationDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            Name = "BRL",
                            UpdateDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            ValueComparedToBaseCurrency = 5.4468m
                        },
                        new
                        {
                            Id = 3L,
                            CreationDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            Name = "EUR",
                            UpdateDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            ValueComparedToBaseCurrency = 0.8324m
                        },
                        new
                        {
                            Id = 4L,
                            CreationDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            Name = "BTC",
                            UpdateDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            ValueComparedToBaseCurrency = 0.0000180180m
                        },
                        new
                        {
                            Id = 5L,
                            CreationDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            Name = "ETH",
                            UpdateDate = new DateTime(2021, 4, 22, 19, 56, 28, 498, DateTimeKind.Local).AddTicks(7010),
                            ValueComparedToBaseCurrency = 0.0003784925m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
