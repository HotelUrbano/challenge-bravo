<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Project.WebApi</name>
    </assembly>
    <members>
        <member name="T:Project.WebApi.SwaggerConfig">
            <summary>
            Class responsible for swagger configuration.
            </summary>
        </member>
        <member name="M:Project.WebApi.SwaggerConfig.Register">
            <summary>
            This method is used to register the XML that will deliver all the API documentation 
            and also define the project in the solution that will keep the API documentation.
            </summary>
        </member>
        <member name="M:Project.WebApi.SwaggerConfig.GetXmlCommentsPath">
            <summary>
            This method is responsible to get the XML file that will bring all API documentation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Project.WebApi.WebApiConfig">
            <summary>
            Class where all the API configurations are made, including routes, response formats, the registration of
            swagger (lib used to document all the API) and other stuff.
            </summary>
        </member>
        <member name="M:Project.WebApi.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            This method is responsible to register all the API configurations.
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Project.WebApi.Controllers.CurrencyConversionController">
            <summary>
            This Controller is responsible to deliver the API methods where the currency converion are made
            and also the connection with the external API.
            </summary>
        </member>
        <member name="M:Project.WebApi.Controllers.CurrencyConversionController.#ctor(Project.Business.Facades.Interface.ICurrencyConversionBusinessFacade)">
            <summary>
            This is the constructor of the controller class. Used in the process of dependency inversion 
            to turn available the methods from facade class.
            </summary>
            <param name="currencyConversionFacade"></param>
        </member>
        <member name="M:Project.WebApi.Controllers.CurrencyConversionController.GetCurrenciesQuotation(System.String)">
            <summary>
            This method is used to connect to the external API in order to get the currency data that 
            will be used in the currency conversion process.
            </summary>
            <param name="currencySymbol">string</param>
            <returns>currency quotation and other data from requested currency</returns>
        </member>
        <member name="M:Project.WebApi.Controllers.CurrencyConversionController.Convert(System.String,System.String,System.Decimal)">
            <summary>
            This method is responsible to calculate the currency conversion.
            </summary>
            <param name="fromCurrency">string</param>
            <param name="toCurrency">string</param>
            <param name="amount">double</param>
            <returns>A json object with some data about the currency conversion.</returns>
        </member>
        <member name="T:Project.WebApi.WebApiApplication">
            <summary>
            This class is used to setup general configurations to the application.
            </summary>
        </member>
        <member name="M:Project.WebApi.WebApiApplication.Application_Start">
            <summary>
            This method will be executed during the application startup, implementing some configurations to the app.
            </summary>
        </member>
        <member name="M:Project.WebApi.WebApiApplication.Application_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            This method is used to setup HTTP request types available to the users.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Project.WebApi.Helpers.AutoMepperHelper">
            <summary>
            This class is used to build the bridge between the DTO class and ViewModel class, 
            supporting the functionality of the automapper.
            </summary>
        </member>
        <member name="M:Project.WebApi.Helpers.AutoMepperHelper.RegisterMappings">
            <summary>
            This method is used to register the relationship between DTO and ViewModel classes
            in the automapper (object mapping) process.
            </summary>
        </member>
        <member name="T:Project.WebApi.Helpers.SimpleInjectorHelper">
            <summary>
            This class is responsible to register the relationship in the dependency injection, between involved items.
            </summary>
        </member>
        <member name="M:Project.WebApi.Helpers.SimpleInjectorHelper.RegisterInjector">
            <summary>
            This method is used to register all the items involed in the dependency injection process.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Project.WebApi.Mappers.DtoToViewModelMap">
            <summary>
            This class is used to map all the properties from Dto to ViewModel classes.
            </summary>
        </member>
        <member name="M:Project.WebApi.Mappers.DtoToViewModelMap.#ctor">
            <summary>
            This constructor is used to implement the mapping between Dto and ViewModels properties.
            </summary>
        </member>
        <member name="T:Project.WebApi.Mappers.ViewModelToDomainMap">
            <summary>
            This class is used to map all the properties from ViewModel to Dto classes.
            </summary>
        </member>
        <member name="M:Project.WebApi.Mappers.ViewModelToDomainMap.#ctor">
            <summary>
            This constructor is used to implement the mapping between ViewModels and Dto's properties.
            </summary>
        </member>
        <member name="T:Project.WebApi.ViewModels.CurrencyDataViewModel">
            <summary>
            This class is used to get converted currency data. This data is provided by its API, not from the external.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.BaseCurrencySymbol">
            <summary>
            This property represents the base currency symbol. e.g: USD, BRL, EUR, etc.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.TargetCurrencySymbol">
            <summary>
            This property represents the target currency symbol. e.g: USD, BRL, EUR, etc.
            </summary>
        </member>
        <member name="F:Project.WebApi.ViewModels.CurrencyDataViewModel.last_updated">
            <summary>
            This property represents the last datetime that the quotation was updated 
            on the server (external API).
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.Last_updated_converted">
            <summary>
            This property is used to convert the timestamp given by the external API (as last updated date)
            in a legible date time format.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.Price_usd">
            <summary>
            This property represents the USD unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.Price_btc">
            <summary>
            This property represents the BTC unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.Price_brl">
            <summary>
            This property represents the BRL unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.Price_eth">
            <summary>
            This property represents the ETH unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.Price_eur">
            <summary>
            This property represents the EUR unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Usd_in_Brl">
            <summary>
            This property represents the unit price for USD in BRL currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Usd_in_Eth">
            <summary>
            This property represents the unit price for USD in ETH currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Usd_in_Btc">
            <summary>
            This property represents the unit price for USD in BTC currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Usd_in_Eur">
            <summary>
            This property represents the unit price for USD in EUR currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Usd_in_Usd">
            <summary>
            This property represents the unit price for USD in USD currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Brl_in_Brl">
            <summary>
            This property represents the unit price for BRL in BRL currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Brl_in_Usd">
            <summary>
            This property represents the unit price for BRL in USD currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Eur_in_Eur">
            <summary>
            This property represents the unit price for EUR in EUR currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Eur_in_Usd">
            <summary>
            This property represents the unit price for EUR in USD currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Btc_in_Btc">
            <summary>
            This property represents the unit price for BTC in BTC currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Btc_in_Usd">
            <summary>
            This property represents the unit price for BTC in USD currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Eth_in_Eth">
            <summary>
            This property represents the unit price for ETH in ETH currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyDataViewModel.UnitPrice_Eth_in_Usd">
            <summary>
            This property represents the unit price for ETH in USD currency.
            </summary>
        </member>
        <member name="T:Project.WebApi.ViewModels.CurrencyQuotationViewModel">
            <summary>
            This class is used to get all the data provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Symbol">
            <summary>
            This property represents the currency symbol. e.g: USD, BRL, EUR, etc.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.TargetCurrencySymbol">
            <summary>
            This property represents the target currency symbol. In other words,
            it's the currency that will have the value converted from a base currency.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Last_updated">
            <summary>
            This property represents the last datetime that the quotation was updated 
            on the server (external API).
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Price_usd">
            <summary>
            This property represents the USD unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Price_btc">
            <summary>
            This property represents the BTC unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Price_brl">
            <summary>
            This property represents the BRL unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Price_eth">
            <summary>
            This property represents the ETH unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
        <member name="P:Project.WebApi.ViewModels.CurrencyQuotationViewModel.Price_eur">
            <summary>
            This property represents the EUR unit price based on Bitcoin and it's provided by the external API.
            </summary>
        </member>
    </members>
</doc>
